import type { StaticBuildOptions } from '../core/build/types.js';
import { type ImageService } from './services/service.js';
import type { GetImageResult, ImageMetadata, ImageTransform } from './types.js';
export declare function isESMImportedImage(src: ImageMetadata | string): src is ImageMetadata;
export declare function getConfiguredImageService(): Promise<ImageService>;
export declare function getImage(options: ImageTransform, serviceConfig: Record<string, any>): Promise<GetImageResult>;
export declare function getStaticImageList(): Iterable<[
    string,
    {
        path: string;
        options: ImageTransform;
    }
]>;
interface GenerationDataUncached {
    cached: false;
    weight: {
        before: number;
        after: number;
    };
}
interface GenerationDataCached {
    cached: true;
}
type GenerationData = GenerationDataUncached | GenerationDataCached;
export declare function generateImage(buildOpts: StaticBuildOptions, options: ImageTransform, filepath: string): Promise<GenerationData | undefined>;
export {};
