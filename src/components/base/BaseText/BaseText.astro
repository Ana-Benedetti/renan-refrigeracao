---
import { TAGS } from './types';

export interface Props {
  class?: string;
  variation?: string;
  tag?: TAGS;
}

const { class: className, tag, variation } = Astro.props;

const dynamicClasses = [
  `${tag}`,
  className,
  variation ? `is-${variation}` : '',
];
---

{
  tag === TAGS.P ? (
    <p class:list={dynamicClasses}>
      <slot />
    </p>
  ) : tag === TAGS.H2 ? (
    <h2 class:list={dynamicClasses}>
      <slot />
    </h2>
  ) : tag === TAGS.H3 ? (
    <h3 class:list={dynamicClasses}>
      <slot />
    </h3>
  ) : tag === TAGS.SPAN ? (
    <span class:list={dynamicClasses}>
      <slot />
    </span>
  ) : tag === TAGS.H1 ? (
    <h1 class:list={dynamicClasses}>
      <slot />
    </h1>
  ) : (
    <p class:list={dynamicClasses}>
      <slot />
    </p>
  )
}

<style>
  .h1,
  .h2,
  .h3,
  .p,
  .span {
    @apply text-neutral;
  }

  .h1,
  .h2,
  .h3 {
    @apply font-nova;
  }

  .p,
  .span {
    @apply font-ubuntu;
  }

  .p {
    @apply text-base;
  }

  .span {
    @apply text-base;
  }

  .h1 {
    @apply text-4xl;
  }

  .h2 {
    @apply text-4xl mb-5;
  }

  .h3 {
    @apply text-2xl;
  }

  .is-blue {
    @apply text-navyBlue;
  }

  @media (min-width: 1024px) {
    .h1 {
      @apply text-6xl;
    }

    .span {
      @apply text-xl;
    }
  }
</style>
